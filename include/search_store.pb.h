// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: search_store.proto

#ifndef PROTOBUF_search_5fstore_2eproto__INCLUDED
#define PROTOBUF_search_5fstore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace lsmsearch {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_search_5fstore_2eproto();
void protobuf_AssignDesc_search_5fstore_2eproto();
void protobuf_ShutdownFile_search_5fstore_2eproto();

class StoreIndexField;
class StoreDocument;
class StoreDocValue;
class StoreMeta;
class MockData;
class MockDataList;

enum MockData_Type {
  MockData_Type_kUnknown = 0,
  MockData_Type_kUpdate = 1,
  MockData_Type_kMerge = 2,
  MockData_Type_kDelete = 3,
  MockData_Type_kDeleteRange = 4
};
bool MockData_Type_IsValid(int value);
const MockData_Type MockData_Type_Type_MIN = MockData_Type_kUnknown;
const MockData_Type MockData_Type_Type_MAX = MockData_Type_kDeleteRange;
const int MockData_Type_Type_ARRAYSIZE = MockData_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MockData_Type_descriptor();
inline const ::std::string& MockData_Type_Name(MockData_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MockData_Type_descriptor(), value);
}
inline bool MockData_Type_Parse(
    const ::std::string& name, MockData_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MockData_Type>(
    MockData_Type_descriptor(), name, value);
}
// ===================================================================

class StoreIndexField : public ::google::protobuf::Message {
 public:
  StoreIndexField();
  virtual ~StoreIndexField();
  
  StoreIndexField(const StoreIndexField& from);
  
  inline StoreIndexField& operator=(const StoreIndexField& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreIndexField& default_instance();
  
  void Swap(StoreIndexField* other);
  
  // implements Message ----------------------------------------------
  
  StoreIndexField* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreIndexField& from);
  void MergeFrom(const StoreIndexField& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 field_id = 1;
  inline bool has_field_id() const;
  inline void clear_field_id();
  static const int kFieldIdFieldNumber = 1;
  inline ::google::protobuf::uint32 field_id() const;
  inline void set_field_id(::google::protobuf::uint32 value);
  
  // required uint32 field_flag = 2;
  inline bool has_field_flag() const;
  inline void clear_field_flag();
  static const int kFieldFlagFieldNumber = 2;
  inline ::google::protobuf::uint32 field_flag() const;
  inline void set_field_flag(::google::protobuf::uint32 value);
  
  // required uint32 field_type = 3;
  inline bool has_field_type() const;
  inline void clear_field_type();
  static const int kFieldTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 field_type() const;
  inline void set_field_type(::google::protobuf::uint32 value);
  
  // optional uint64 numeric_value = 4;
  inline bool has_numeric_value() const;
  inline void clear_numeric_value();
  static const int kNumericValueFieldNumber = 4;
  inline ::google::protobuf::uint64 numeric_value() const;
  inline void set_numeric_value(::google::protobuf::uint64 value);
  
  // optional bytes string_value = 5;
  inline bool has_string_value() const;
  inline void clear_string_value();
  static const int kStringValueFieldNumber = 5;
  inline const ::std::string& string_value() const;
  inline void set_string_value(const ::std::string& value);
  inline void set_string_value(const char* value);
  inline void set_string_value(const void* value, size_t size);
  inline ::std::string* mutable_string_value();
  inline ::std::string* release_string_value();
  
  // repeated bytes terms = 6;
  inline int terms_size() const;
  inline void clear_terms();
  static const int kTermsFieldNumber = 6;
  inline const ::std::string& terms(int index) const;
  inline ::std::string* mutable_terms(int index);
  inline void set_terms(int index, const ::std::string& value);
  inline void set_terms(int index, const char* value);
  inline void set_terms(int index, const void* value, size_t size);
  inline ::std::string* add_terms();
  inline void add_terms(const ::std::string& value);
  inline void add_terms(const char* value);
  inline void add_terms(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& terms() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_terms();
  
  // optional uint32 suffix_len = 10;
  inline bool has_suffix_len() const;
  inline void clear_suffix_len();
  static const int kSuffixLenFieldNumber = 10;
  inline ::google::protobuf::uint32 suffix_len() const;
  inline void set_suffix_len(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:lsmsearch.StoreIndexField)
 private:
  inline void set_has_field_id();
  inline void clear_has_field_id();
  inline void set_has_field_flag();
  inline void clear_has_field_flag();
  inline void set_has_field_type();
  inline void clear_has_field_type();
  inline void set_has_numeric_value();
  inline void clear_has_numeric_value();
  inline void set_has_string_value();
  inline void clear_has_string_value();
  inline void set_has_suffix_len();
  inline void clear_has_suffix_len();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 field_id_;
  ::google::protobuf::uint32 field_flag_;
  ::google::protobuf::uint64 numeric_value_;
  ::std::string* string_value_;
  ::google::protobuf::uint32 field_type_;
  ::google::protobuf::uint32 suffix_len_;
  ::google::protobuf::RepeatedPtrField< ::std::string> terms_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_search_5fstore_2eproto();
  friend void protobuf_AssignDesc_search_5fstore_2eproto();
  friend void protobuf_ShutdownFile_search_5fstore_2eproto();
  
  void InitAsDefaultInstance();
  static StoreIndexField* default_instance_;
};
// -------------------------------------------------------------------

class StoreDocument : public ::google::protobuf::Message {
 public:
  StoreDocument();
  virtual ~StoreDocument();
  
  StoreDocument(const StoreDocument& from);
  
  inline StoreDocument& operator=(const StoreDocument& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreDocument& default_instance();
  
  void Swap(StoreDocument* other);
  
  // implements Message ----------------------------------------------
  
  StoreDocument* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreDocument& from);
  void MergeFrom(const StoreDocument& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 document_id = 1;
  inline bool has_document_id() const;
  inline void clear_document_id();
  static const int kDocumentIdFieldNumber = 1;
  inline ::google::protobuf::uint64 document_id() const;
  inline void set_document_id(::google::protobuf::uint64 value);
  
  // repeated .lsmsearch.StoreIndexField fields = 2;
  inline int fields_size() const;
  inline void clear_fields();
  static const int kFieldsFieldNumber = 2;
  inline const ::lsmsearch::StoreIndexField& fields(int index) const;
  inline ::lsmsearch::StoreIndexField* mutable_fields(int index);
  inline ::lsmsearch::StoreIndexField* add_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >&
      fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >*
      mutable_fields();
  
  // @@protoc_insertion_point(class_scope:lsmsearch.StoreDocument)
 private:
  inline void set_has_document_id();
  inline void clear_has_document_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 document_id_;
  ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField > fields_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_search_5fstore_2eproto();
  friend void protobuf_AssignDesc_search_5fstore_2eproto();
  friend void protobuf_ShutdownFile_search_5fstore_2eproto();
  
  void InitAsDefaultInstance();
  static StoreDocument* default_instance_;
};
// -------------------------------------------------------------------

class StoreDocValue : public ::google::protobuf::Message {
 public:
  StoreDocValue();
  virtual ~StoreDocValue();
  
  StoreDocValue(const StoreDocValue& from);
  
  inline StoreDocValue& operator=(const StoreDocValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreDocValue& default_instance();
  
  void Swap(StoreDocValue* other);
  
  // implements Message ----------------------------------------------
  
  StoreDocValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreDocValue& from);
  void MergeFrom(const StoreDocValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .lsmsearch.StoreIndexField fields = 1;
  inline int fields_size() const;
  inline void clear_fields();
  static const int kFieldsFieldNumber = 1;
  inline const ::lsmsearch::StoreIndexField& fields(int index) const;
  inline ::lsmsearch::StoreIndexField* mutable_fields(int index);
  inline ::lsmsearch::StoreIndexField* add_fields();
  inline const ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >&
      fields() const;
  inline ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >*
      mutable_fields();
  
  // @@protoc_insertion_point(class_scope:lsmsearch.StoreDocValue)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField > fields_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_search_5fstore_2eproto();
  friend void protobuf_AssignDesc_search_5fstore_2eproto();
  friend void protobuf_ShutdownFile_search_5fstore_2eproto();
  
  void InitAsDefaultInstance();
  static StoreDocValue* default_instance_;
};
// -------------------------------------------------------------------

class StoreMeta : public ::google::protobuf::Message {
 public:
  StoreMeta();
  virtual ~StoreMeta();
  
  StoreMeta(const StoreMeta& from);
  
  inline StoreMeta& operator=(const StoreMeta& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreMeta& default_instance();
  
  void Swap(StoreMeta* other);
  
  // implements Message ----------------------------------------------
  
  StoreMeta* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreMeta& from);
  void MergeFrom(const StoreMeta& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 total_documents = 1;
  inline bool has_total_documents() const;
  inline void clear_total_documents();
  static const int kTotalDocumentsFieldNumber = 1;
  inline ::google::protobuf::uint64 total_documents() const;
  inline void set_total_documents(::google::protobuf::uint64 value);
  
  // optional uint64 delete_documents = 2;
  inline bool has_delete_documents() const;
  inline void clear_delete_documents();
  static const int kDeleteDocumentsFieldNumber = 2;
  inline ::google::protobuf::uint64 delete_documents() const;
  inline void set_delete_documents(::google::protobuf::uint64 value);
  
  // optional uint64 increase_seq = 3;
  inline bool has_increase_seq() const;
  inline void clear_increase_seq();
  static const int kIncreaseSeqFieldNumber = 3;
  inline ::google::protobuf::uint64 increase_seq() const;
  inline void set_increase_seq(::google::protobuf::uint64 value);
  
  // optional uint64 terms_count = 4;
  inline bool has_terms_count() const;
  inline void clear_terms_count();
  static const int kTermsCountFieldNumber = 4;
  inline ::google::protobuf::uint64 terms_count() const;
  inline void set_terms_count(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:lsmsearch.StoreMeta)
 private:
  inline void set_has_total_documents();
  inline void clear_has_total_documents();
  inline void set_has_delete_documents();
  inline void clear_has_delete_documents();
  inline void set_has_increase_seq();
  inline void clear_has_increase_seq();
  inline void set_has_terms_count();
  inline void clear_has_terms_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 total_documents_;
  ::google::protobuf::uint64 delete_documents_;
  ::google::protobuf::uint64 increase_seq_;
  ::google::protobuf::uint64 terms_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_search_5fstore_2eproto();
  friend void protobuf_AssignDesc_search_5fstore_2eproto();
  friend void protobuf_ShutdownFile_search_5fstore_2eproto();
  
  void InitAsDefaultInstance();
  static StoreMeta* default_instance_;
};
// -------------------------------------------------------------------

class MockData : public ::google::protobuf::Message {
 public:
  MockData();
  virtual ~MockData();
  
  MockData(const MockData& from);
  
  inline MockData& operator=(const MockData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MockData& default_instance();
  
  void Swap(MockData* other);
  
  // implements Message ----------------------------------------------
  
  MockData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MockData& from);
  void MergeFrom(const MockData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MockData_Type Type;
  static const Type kUnknown = MockData_Type_kUnknown;
  static const Type kUpdate = MockData_Type_kUpdate;
  static const Type kMerge = MockData_Type_kMerge;
  static const Type kDelete = MockData_Type_kDelete;
  static const Type kDeleteRange = MockData_Type_kDeleteRange;
  static inline bool Type_IsValid(int value) {
    return MockData_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MockData_Type_Type_MIN;
  static const Type Type_MAX =
    MockData_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MockData_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MockData_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MockData_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MockData_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required uint32 column_type = 1;
  inline bool has_column_type() const;
  inline void clear_column_type();
  static const int kColumnTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 column_type() const;
  inline void set_column_type(::google::protobuf::uint32 value);
  
  // required bytes key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required bytes value = 3;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 3;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // required .lsmsearch.MockData.Type type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::lsmsearch::MockData_Type type() const;
  inline void set_type(::lsmsearch::MockData_Type value);
  
  // optional bytes end_key = 5;
  inline bool has_end_key() const;
  inline void clear_end_key();
  static const int kEndKeyFieldNumber = 5;
  inline const ::std::string& end_key() const;
  inline void set_end_key(const ::std::string& value);
  inline void set_end_key(const char* value);
  inline void set_end_key(const void* value, size_t size);
  inline ::std::string* mutable_end_key();
  inline ::std::string* release_end_key();
  
  // @@protoc_insertion_point(class_scope:lsmsearch.MockData)
 private:
  inline void set_has_column_type();
  inline void clear_has_column_type();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_end_key();
  inline void clear_has_end_key();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_;
  ::google::protobuf::uint32 column_type_;
  int type_;
  ::std::string* value_;
  ::std::string* end_key_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_search_5fstore_2eproto();
  friend void protobuf_AssignDesc_search_5fstore_2eproto();
  friend void protobuf_ShutdownFile_search_5fstore_2eproto();
  
  void InitAsDefaultInstance();
  static MockData* default_instance_;
};
// -------------------------------------------------------------------

class MockDataList : public ::google::protobuf::Message {
 public:
  MockDataList();
  virtual ~MockDataList();
  
  MockDataList(const MockDataList& from);
  
  inline MockDataList& operator=(const MockDataList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MockDataList& default_instance();
  
  void Swap(MockDataList* other);
  
  // implements Message ----------------------------------------------
  
  MockDataList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MockDataList& from);
  void MergeFrom(const MockDataList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .lsmsearch.MockData mock_data_list = 1;
  inline int mock_data_list_size() const;
  inline void clear_mock_data_list();
  static const int kMockDataListFieldNumber = 1;
  inline const ::lsmsearch::MockData& mock_data_list(int index) const;
  inline ::lsmsearch::MockData* mutable_mock_data_list(int index);
  inline ::lsmsearch::MockData* add_mock_data_list();
  inline const ::google::protobuf::RepeatedPtrField< ::lsmsearch::MockData >&
      mock_data_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::lsmsearch::MockData >*
      mutable_mock_data_list();
  
  // @@protoc_insertion_point(class_scope:lsmsearch.MockDataList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::lsmsearch::MockData > mock_data_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_search_5fstore_2eproto();
  friend void protobuf_AssignDesc_search_5fstore_2eproto();
  friend void protobuf_ShutdownFile_search_5fstore_2eproto();
  
  void InitAsDefaultInstance();
  static MockDataList* default_instance_;
};
// ===================================================================


// ===================================================================

// StoreIndexField

// required uint32 field_id = 1;
inline bool StoreIndexField::has_field_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreIndexField::set_has_field_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreIndexField::clear_has_field_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreIndexField::clear_field_id() {
  field_id_ = 0u;
  clear_has_field_id();
}
inline ::google::protobuf::uint32 StoreIndexField::field_id() const {
  return field_id_;
}
inline void StoreIndexField::set_field_id(::google::protobuf::uint32 value) {
  set_has_field_id();
  field_id_ = value;
}

// required uint32 field_flag = 2;
inline bool StoreIndexField::has_field_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreIndexField::set_has_field_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreIndexField::clear_has_field_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreIndexField::clear_field_flag() {
  field_flag_ = 0u;
  clear_has_field_flag();
}
inline ::google::protobuf::uint32 StoreIndexField::field_flag() const {
  return field_flag_;
}
inline void StoreIndexField::set_field_flag(::google::protobuf::uint32 value) {
  set_has_field_flag();
  field_flag_ = value;
}

// required uint32 field_type = 3;
inline bool StoreIndexField::has_field_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoreIndexField::set_has_field_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoreIndexField::clear_has_field_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoreIndexField::clear_field_type() {
  field_type_ = 0u;
  clear_has_field_type();
}
inline ::google::protobuf::uint32 StoreIndexField::field_type() const {
  return field_type_;
}
inline void StoreIndexField::set_field_type(::google::protobuf::uint32 value) {
  set_has_field_type();
  field_type_ = value;
}

// optional uint64 numeric_value = 4;
inline bool StoreIndexField::has_numeric_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoreIndexField::set_has_numeric_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoreIndexField::clear_has_numeric_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoreIndexField::clear_numeric_value() {
  numeric_value_ = GOOGLE_ULONGLONG(0);
  clear_has_numeric_value();
}
inline ::google::protobuf::uint64 StoreIndexField::numeric_value() const {
  return numeric_value_;
}
inline void StoreIndexField::set_numeric_value(::google::protobuf::uint64 value) {
  set_has_numeric_value();
  numeric_value_ = value;
}

// optional bytes string_value = 5;
inline bool StoreIndexField::has_string_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoreIndexField::set_has_string_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StoreIndexField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StoreIndexField::clear_string_value() {
  if (string_value_ != &::google::protobuf::internal::kEmptyString) {
    string_value_->clear();
  }
  clear_has_string_value();
}
inline const ::std::string& StoreIndexField::string_value() const {
  return *string_value_;
}
inline void StoreIndexField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void StoreIndexField::set_string_value(const char* value) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(value);
}
inline void StoreIndexField::set_string_value(const void* value, size_t size) {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  string_value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StoreIndexField::mutable_string_value() {
  set_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    string_value_ = new ::std::string;
  }
  return string_value_;
}
inline ::std::string* StoreIndexField::release_string_value() {
  clear_has_string_value();
  if (string_value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = string_value_;
    string_value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated bytes terms = 6;
inline int StoreIndexField::terms_size() const {
  return terms_.size();
}
inline void StoreIndexField::clear_terms() {
  terms_.Clear();
}
inline const ::std::string& StoreIndexField::terms(int index) const {
  return terms_.Get(index);
}
inline ::std::string* StoreIndexField::mutable_terms(int index) {
  return terms_.Mutable(index);
}
inline void StoreIndexField::set_terms(int index, const ::std::string& value) {
  terms_.Mutable(index)->assign(value);
}
inline void StoreIndexField::set_terms(int index, const char* value) {
  terms_.Mutable(index)->assign(value);
}
inline void StoreIndexField::set_terms(int index, const void* value, size_t size) {
  terms_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StoreIndexField::add_terms() {
  return terms_.Add();
}
inline void StoreIndexField::add_terms(const ::std::string& value) {
  terms_.Add()->assign(value);
}
inline void StoreIndexField::add_terms(const char* value) {
  terms_.Add()->assign(value);
}
inline void StoreIndexField::add_terms(const void* value, size_t size) {
  terms_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StoreIndexField::terms() const {
  return terms_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StoreIndexField::mutable_terms() {
  return &terms_;
}

// optional uint32 suffix_len = 10;
inline bool StoreIndexField::has_suffix_len() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StoreIndexField::set_has_suffix_len() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StoreIndexField::clear_has_suffix_len() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StoreIndexField::clear_suffix_len() {
  suffix_len_ = 0u;
  clear_has_suffix_len();
}
inline ::google::protobuf::uint32 StoreIndexField::suffix_len() const {
  return suffix_len_;
}
inline void StoreIndexField::set_suffix_len(::google::protobuf::uint32 value) {
  set_has_suffix_len();
  suffix_len_ = value;
}

// -------------------------------------------------------------------

// StoreDocument

// required uint64 document_id = 1;
inline bool StoreDocument::has_document_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreDocument::set_has_document_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreDocument::clear_has_document_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreDocument::clear_document_id() {
  document_id_ = GOOGLE_ULONGLONG(0);
  clear_has_document_id();
}
inline ::google::protobuf::uint64 StoreDocument::document_id() const {
  return document_id_;
}
inline void StoreDocument::set_document_id(::google::protobuf::uint64 value) {
  set_has_document_id();
  document_id_ = value;
}

// repeated .lsmsearch.StoreIndexField fields = 2;
inline int StoreDocument::fields_size() const {
  return fields_.size();
}
inline void StoreDocument::clear_fields() {
  fields_.Clear();
}
inline const ::lsmsearch::StoreIndexField& StoreDocument::fields(int index) const {
  return fields_.Get(index);
}
inline ::lsmsearch::StoreIndexField* StoreDocument::mutable_fields(int index) {
  return fields_.Mutable(index);
}
inline ::lsmsearch::StoreIndexField* StoreDocument::add_fields() {
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >&
StoreDocument::fields() const {
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >*
StoreDocument::mutable_fields() {
  return &fields_;
}

// -------------------------------------------------------------------

// StoreDocValue

// repeated .lsmsearch.StoreIndexField fields = 1;
inline int StoreDocValue::fields_size() const {
  return fields_.size();
}
inline void StoreDocValue::clear_fields() {
  fields_.Clear();
}
inline const ::lsmsearch::StoreIndexField& StoreDocValue::fields(int index) const {
  return fields_.Get(index);
}
inline ::lsmsearch::StoreIndexField* StoreDocValue::mutable_fields(int index) {
  return fields_.Mutable(index);
}
inline ::lsmsearch::StoreIndexField* StoreDocValue::add_fields() {
  return fields_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >&
StoreDocValue::fields() const {
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::lsmsearch::StoreIndexField >*
StoreDocValue::mutable_fields() {
  return &fields_;
}

// -------------------------------------------------------------------

// StoreMeta

// optional uint64 total_documents = 1;
inline bool StoreMeta::has_total_documents() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreMeta::set_has_total_documents() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreMeta::clear_has_total_documents() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreMeta::clear_total_documents() {
  total_documents_ = GOOGLE_ULONGLONG(0);
  clear_has_total_documents();
}
inline ::google::protobuf::uint64 StoreMeta::total_documents() const {
  return total_documents_;
}
inline void StoreMeta::set_total_documents(::google::protobuf::uint64 value) {
  set_has_total_documents();
  total_documents_ = value;
}

// optional uint64 delete_documents = 2;
inline bool StoreMeta::has_delete_documents() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreMeta::set_has_delete_documents() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreMeta::clear_has_delete_documents() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreMeta::clear_delete_documents() {
  delete_documents_ = GOOGLE_ULONGLONG(0);
  clear_has_delete_documents();
}
inline ::google::protobuf::uint64 StoreMeta::delete_documents() const {
  return delete_documents_;
}
inline void StoreMeta::set_delete_documents(::google::protobuf::uint64 value) {
  set_has_delete_documents();
  delete_documents_ = value;
}

// optional uint64 increase_seq = 3;
inline bool StoreMeta::has_increase_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoreMeta::set_has_increase_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoreMeta::clear_has_increase_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoreMeta::clear_increase_seq() {
  increase_seq_ = GOOGLE_ULONGLONG(0);
  clear_has_increase_seq();
}
inline ::google::protobuf::uint64 StoreMeta::increase_seq() const {
  return increase_seq_;
}
inline void StoreMeta::set_increase_seq(::google::protobuf::uint64 value) {
  set_has_increase_seq();
  increase_seq_ = value;
}

// optional uint64 terms_count = 4;
inline bool StoreMeta::has_terms_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoreMeta::set_has_terms_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoreMeta::clear_has_terms_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoreMeta::clear_terms_count() {
  terms_count_ = GOOGLE_ULONGLONG(0);
  clear_has_terms_count();
}
inline ::google::protobuf::uint64 StoreMeta::terms_count() const {
  return terms_count_;
}
inline void StoreMeta::set_terms_count(::google::protobuf::uint64 value) {
  set_has_terms_count();
  terms_count_ = value;
}

// -------------------------------------------------------------------

// MockData

// required uint32 column_type = 1;
inline bool MockData::has_column_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MockData::set_has_column_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MockData::clear_has_column_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MockData::clear_column_type() {
  column_type_ = 0u;
  clear_has_column_type();
}
inline ::google::protobuf::uint32 MockData::column_type() const {
  return column_type_;
}
inline void MockData::set_column_type(::google::protobuf::uint32 value) {
  set_has_column_type();
  column_type_ = value;
}

// required bytes key = 2;
inline bool MockData::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MockData::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MockData::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MockData::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& MockData::key() const {
  return *key_;
}
inline void MockData::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void MockData::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void MockData::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MockData::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* MockData::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes value = 3;
inline bool MockData::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MockData::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MockData::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MockData::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& MockData::value() const {
  return *value_;
}
inline void MockData::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void MockData::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void MockData::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MockData::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* MockData::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .lsmsearch.MockData.Type type = 4;
inline bool MockData::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MockData::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MockData::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MockData::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::lsmsearch::MockData_Type MockData::type() const {
  return static_cast< ::lsmsearch::MockData_Type >(type_);
}
inline void MockData::set_type(::lsmsearch::MockData_Type value) {
  GOOGLE_DCHECK(::lsmsearch::MockData_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional bytes end_key = 5;
inline bool MockData::has_end_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MockData::set_has_end_key() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MockData::clear_has_end_key() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MockData::clear_end_key() {
  if (end_key_ != &::google::protobuf::internal::kEmptyString) {
    end_key_->clear();
  }
  clear_has_end_key();
}
inline const ::std::string& MockData::end_key() const {
  return *end_key_;
}
inline void MockData::set_end_key(const ::std::string& value) {
  set_has_end_key();
  if (end_key_ == &::google::protobuf::internal::kEmptyString) {
    end_key_ = new ::std::string;
  }
  end_key_->assign(value);
}
inline void MockData::set_end_key(const char* value) {
  set_has_end_key();
  if (end_key_ == &::google::protobuf::internal::kEmptyString) {
    end_key_ = new ::std::string;
  }
  end_key_->assign(value);
}
inline void MockData::set_end_key(const void* value, size_t size) {
  set_has_end_key();
  if (end_key_ == &::google::protobuf::internal::kEmptyString) {
    end_key_ = new ::std::string;
  }
  end_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MockData::mutable_end_key() {
  set_has_end_key();
  if (end_key_ == &::google::protobuf::internal::kEmptyString) {
    end_key_ = new ::std::string;
  }
  return end_key_;
}
inline ::std::string* MockData::release_end_key() {
  clear_has_end_key();
  if (end_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = end_key_;
    end_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// MockDataList

// repeated .lsmsearch.MockData mock_data_list = 1;
inline int MockDataList::mock_data_list_size() const {
  return mock_data_list_.size();
}
inline void MockDataList::clear_mock_data_list() {
  mock_data_list_.Clear();
}
inline const ::lsmsearch::MockData& MockDataList::mock_data_list(int index) const {
  return mock_data_list_.Get(index);
}
inline ::lsmsearch::MockData* MockDataList::mutable_mock_data_list(int index) {
  return mock_data_list_.Mutable(index);
}
inline ::lsmsearch::MockData* MockDataList::add_mock_data_list() {
  return mock_data_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lsmsearch::MockData >&
MockDataList::mock_data_list() const {
  return mock_data_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::lsmsearch::MockData >*
MockDataList::mutable_mock_data_list() {
  return &mock_data_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lsmsearch

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lsmsearch::MockData_Type>() {
  return ::lsmsearch::MockData_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_search_5fstore_2eproto__INCLUDED
